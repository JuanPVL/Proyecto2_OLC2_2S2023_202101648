// Code generated from SwiftLexer.g4 by ANTLR 4.13.0. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SwiftLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var SwiftLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func swiftlexerLexerInit() {
	staticData := &SwiftLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'Int'", "'Float'", "'Bool'", "'String'", "'true'", "'false'", "'print'",
		"'if'", "'else'", "'while'", "'for'", "'in'", "'switch'", "'case'",
		"'default'", "'var'", "'let'", "'nil'", "'break'", "'continue'", "'append'",
		"'removeLast'", "'remove'", "'at'", "'isEmpty'", "'count'", "'array'",
		"'return'", "'func'", "'struct'", "'guard'", "", "", "", "", "'!='",
		"'=='", "'!'", "'||'", "'&&'", "'='", "'>='", "'<='", "'>'", "'<'",
		"'*'", "'/'", "'+'", "'-'", "'%'", "'('", "')'", "'{'", "'}'", "':'",
		"'['", "']'", "','", "'?'", "';'", "'.'", "'->'",
	}
	staticData.SymbolicNames = []string{
		"", "INT", "FLOAT", "BOOL", "STR", "TRU", "FAL", "PRINT", "IF", "ELSE",
		"WHILE", "FOR", "IN", "SWITCH", "CASE", "DEFAULT", "VAR", "LET", "NIL",
		"BREAK", "CONTINUE", "APPEND", "REMOVELAST", "REMOVE", "AT", "ISEMPTY",
		"COUNT", "ARRAY", "RETURN", "FUNC", "STRUCT", "GUARD", "NUMBER", "STRING",
		"CHAR", "ID", "DIFE", "IG_IG", "NOT", "OR", "AND", "IGUAL", "MAYIG",
		"MENIG", "MAYOR", "MENOR", "MULT", "DIV", "SUM", "RES", "MOD", "PAR_IZQ",
		"PAR_DER", "LLAVE_IZQ", "LLAVE_DER", "DOSPUNTOS", "COR_IZQ", "COR_DER",
		"COMA", "CIERRAPREGUNTA", "PUNTOCOMA", "PUNTO", "FLECHA", "WHITESPACE",
		"COMMENT", "LINE_COMMENT",
	}
	staticData.RuleNames = []string{
		"INT", "FLOAT", "BOOL", "STR", "TRU", "FAL", "PRINT", "IF", "ELSE",
		"WHILE", "FOR", "IN", "SWITCH", "CASE", "DEFAULT", "VAR", "LET", "NIL",
		"BREAK", "CONTINUE", "APPEND", "REMOVELAST", "REMOVE", "AT", "ISEMPTY",
		"COUNT", "ARRAY", "RETURN", "FUNC", "STRUCT", "GUARD", "NUMBER", "STRING",
		"CHAR", "ID", "DIFE", "IG_IG", "NOT", "OR", "AND", "IGUAL", "MAYIG",
		"MENIG", "MAYOR", "MENOR", "MULT", "DIV", "SUM", "RES", "MOD", "PAR_IZQ",
		"PAR_DER", "LLAVE_IZQ", "LLAVE_DER", "DOSPUNTOS", "COR_IZQ", "COR_DER",
		"COMA", "CIERRAPREGUNTA", "PUNTOCOMA", "PUNTO", "FLECHA", "WHITESPACE",
		"COMMENT", "LINE_COMMENT", "ESC_SEQ",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 65, 442, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 1, 0, 1, 0, 1, 0, 1, 0, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1,
		3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1,
		5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1,
		7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1,
		9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12,
		1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1,
		14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15,
		1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1,
		18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19,
		1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1,
		21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22,
		1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 24, 1,
		24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25,
		1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1,
		27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29,
		1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 30, 1,
		30, 1, 30, 1, 31, 4, 31, 315, 8, 31, 11, 31, 12, 31, 316, 1, 31, 1, 31,
		4, 31, 321, 8, 31, 11, 31, 12, 31, 322, 3, 31, 325, 8, 31, 1, 32, 1, 32,
		5, 32, 329, 8, 32, 10, 32, 12, 32, 332, 9, 32, 1, 32, 1, 32, 1, 33, 1,
		33, 1, 33, 1, 33, 1, 34, 1, 34, 5, 34, 342, 8, 34, 10, 34, 12, 34, 345,
		9, 34, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1,
		38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 42,
		1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 1,
		47, 1, 47, 1, 48, 1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 52,
		1, 52, 1, 53, 1, 53, 1, 54, 1, 54, 1, 55, 1, 55, 1, 56, 1, 56, 1, 57, 1,
		57, 1, 58, 1, 58, 1, 59, 1, 59, 1, 60, 1, 60, 1, 61, 1, 61, 1, 61, 1, 62,
		4, 62, 409, 8, 62, 11, 62, 12, 62, 410, 1, 62, 1, 62, 1, 63, 1, 63, 1,
		63, 1, 63, 5, 63, 419, 8, 63, 10, 63, 12, 63, 422, 9, 63, 1, 63, 1, 63,
		1, 63, 1, 63, 1, 63, 1, 64, 1, 64, 1, 64, 1, 64, 5, 64, 433, 8, 64, 10,
		64, 12, 64, 436, 9, 64, 1, 64, 1, 64, 1, 65, 1, 65, 1, 65, 1, 420, 0, 66,
		1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11,
		23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20,
		41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29,
		59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38,
		77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47,
		95, 48, 97, 49, 99, 50, 101, 51, 103, 52, 105, 53, 107, 54, 109, 55, 111,
		56, 113, 57, 115, 58, 117, 59, 119, 60, 121, 61, 123, 62, 125, 63, 127,
		64, 129, 65, 131, 0, 1, 0, 8, 1, 0, 48, 57, 1, 0, 34, 34, 1, 0, 39, 39,
		3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 4,
		0, 9, 10, 13, 13, 32, 32, 92, 92, 2, 0, 10, 10, 13, 13, 7, 0, 32, 33, 35,
		35, 43, 43, 45, 46, 58, 58, 64, 64, 91, 93, 448, 0, 1, 1, 0, 0, 0, 0, 3,
		1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11,
		1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0,
		19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0,
		0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0,
		0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0,
		0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1,
		0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57,
		1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0,
		65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0,
		0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0,
		0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0,
		0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1,
		0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103,
		1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0,
		0, 111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117, 1,
		0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 0,
		125, 1, 0, 0, 0, 0, 127, 1, 0, 0, 0, 0, 129, 1, 0, 0, 0, 1, 133, 1, 0,
		0, 0, 3, 137, 1, 0, 0, 0, 5, 143, 1, 0, 0, 0, 7, 148, 1, 0, 0, 0, 9, 155,
		1, 0, 0, 0, 11, 160, 1, 0, 0, 0, 13, 166, 1, 0, 0, 0, 15, 172, 1, 0, 0,
		0, 17, 175, 1, 0, 0, 0, 19, 180, 1, 0, 0, 0, 21, 186, 1, 0, 0, 0, 23, 190,
		1, 0, 0, 0, 25, 193, 1, 0, 0, 0, 27, 200, 1, 0, 0, 0, 29, 205, 1, 0, 0,
		0, 31, 213, 1, 0, 0, 0, 33, 217, 1, 0, 0, 0, 35, 221, 1, 0, 0, 0, 37, 225,
		1, 0, 0, 0, 39, 231, 1, 0, 0, 0, 41, 240, 1, 0, 0, 0, 43, 247, 1, 0, 0,
		0, 45, 258, 1, 0, 0, 0, 47, 265, 1, 0, 0, 0, 49, 268, 1, 0, 0, 0, 51, 276,
		1, 0, 0, 0, 53, 282, 1, 0, 0, 0, 55, 288, 1, 0, 0, 0, 57, 295, 1, 0, 0,
		0, 59, 300, 1, 0, 0, 0, 61, 307, 1, 0, 0, 0, 63, 314, 1, 0, 0, 0, 65, 326,
		1, 0, 0, 0, 67, 335, 1, 0, 0, 0, 69, 339, 1, 0, 0, 0, 71, 346, 1, 0, 0,
		0, 73, 349, 1, 0, 0, 0, 75, 352, 1, 0, 0, 0, 77, 354, 1, 0, 0, 0, 79, 357,
		1, 0, 0, 0, 81, 360, 1, 0, 0, 0, 83, 362, 1, 0, 0, 0, 85, 365, 1, 0, 0,
		0, 87, 368, 1, 0, 0, 0, 89, 370, 1, 0, 0, 0, 91, 372, 1, 0, 0, 0, 93, 374,
		1, 0, 0, 0, 95, 376, 1, 0, 0, 0, 97, 378, 1, 0, 0, 0, 99, 380, 1, 0, 0,
		0, 101, 382, 1, 0, 0, 0, 103, 384, 1, 0, 0, 0, 105, 386, 1, 0, 0, 0, 107,
		388, 1, 0, 0, 0, 109, 390, 1, 0, 0, 0, 111, 392, 1, 0, 0, 0, 113, 394,
		1, 0, 0, 0, 115, 396, 1, 0, 0, 0, 117, 398, 1, 0, 0, 0, 119, 400, 1, 0,
		0, 0, 121, 402, 1, 0, 0, 0, 123, 404, 1, 0, 0, 0, 125, 408, 1, 0, 0, 0,
		127, 414, 1, 0, 0, 0, 129, 428, 1, 0, 0, 0, 131, 439, 1, 0, 0, 0, 133,
		134, 5, 73, 0, 0, 134, 135, 5, 110, 0, 0, 135, 136, 5, 116, 0, 0, 136,
		2, 1, 0, 0, 0, 137, 138, 5, 70, 0, 0, 138, 139, 5, 108, 0, 0, 139, 140,
		5, 111, 0, 0, 140, 141, 5, 97, 0, 0, 141, 142, 5, 116, 0, 0, 142, 4, 1,
		0, 0, 0, 143, 144, 5, 66, 0, 0, 144, 145, 5, 111, 0, 0, 145, 146, 5, 111,
		0, 0, 146, 147, 5, 108, 0, 0, 147, 6, 1, 0, 0, 0, 148, 149, 5, 83, 0, 0,
		149, 150, 5, 116, 0, 0, 150, 151, 5, 114, 0, 0, 151, 152, 5, 105, 0, 0,
		152, 153, 5, 110, 0, 0, 153, 154, 5, 103, 0, 0, 154, 8, 1, 0, 0, 0, 155,
		156, 5, 116, 0, 0, 156, 157, 5, 114, 0, 0, 157, 158, 5, 117, 0, 0, 158,
		159, 5, 101, 0, 0, 159, 10, 1, 0, 0, 0, 160, 161, 5, 102, 0, 0, 161, 162,
		5, 97, 0, 0, 162, 163, 5, 108, 0, 0, 163, 164, 5, 115, 0, 0, 164, 165,
		5, 101, 0, 0, 165, 12, 1, 0, 0, 0, 166, 167, 5, 112, 0, 0, 167, 168, 5,
		114, 0, 0, 168, 169, 5, 105, 0, 0, 169, 170, 5, 110, 0, 0, 170, 171, 5,
		116, 0, 0, 171, 14, 1, 0, 0, 0, 172, 173, 5, 105, 0, 0, 173, 174, 5, 102,
		0, 0, 174, 16, 1, 0, 0, 0, 175, 176, 5, 101, 0, 0, 176, 177, 5, 108, 0,
		0, 177, 178, 5, 115, 0, 0, 178, 179, 5, 101, 0, 0, 179, 18, 1, 0, 0, 0,
		180, 181, 5, 119, 0, 0, 181, 182, 5, 104, 0, 0, 182, 183, 5, 105, 0, 0,
		183, 184, 5, 108, 0, 0, 184, 185, 5, 101, 0, 0, 185, 20, 1, 0, 0, 0, 186,
		187, 5, 102, 0, 0, 187, 188, 5, 111, 0, 0, 188, 189, 5, 114, 0, 0, 189,
		22, 1, 0, 0, 0, 190, 191, 5, 105, 0, 0, 191, 192, 5, 110, 0, 0, 192, 24,
		1, 0, 0, 0, 193, 194, 5, 115, 0, 0, 194, 195, 5, 119, 0, 0, 195, 196, 5,
		105, 0, 0, 196, 197, 5, 116, 0, 0, 197, 198, 5, 99, 0, 0, 198, 199, 5,
		104, 0, 0, 199, 26, 1, 0, 0, 0, 200, 201, 5, 99, 0, 0, 201, 202, 5, 97,
		0, 0, 202, 203, 5, 115, 0, 0, 203, 204, 5, 101, 0, 0, 204, 28, 1, 0, 0,
		0, 205, 206, 5, 100, 0, 0, 206, 207, 5, 101, 0, 0, 207, 208, 5, 102, 0,
		0, 208, 209, 5, 97, 0, 0, 209, 210, 5, 117, 0, 0, 210, 211, 5, 108, 0,
		0, 211, 212, 5, 116, 0, 0, 212, 30, 1, 0, 0, 0, 213, 214, 5, 118, 0, 0,
		214, 215, 5, 97, 0, 0, 215, 216, 5, 114, 0, 0, 216, 32, 1, 0, 0, 0, 217,
		218, 5, 108, 0, 0, 218, 219, 5, 101, 0, 0, 219, 220, 5, 116, 0, 0, 220,
		34, 1, 0, 0, 0, 221, 222, 5, 110, 0, 0, 222, 223, 5, 105, 0, 0, 223, 224,
		5, 108, 0, 0, 224, 36, 1, 0, 0, 0, 225, 226, 5, 98, 0, 0, 226, 227, 5,
		114, 0, 0, 227, 228, 5, 101, 0, 0, 228, 229, 5, 97, 0, 0, 229, 230, 5,
		107, 0, 0, 230, 38, 1, 0, 0, 0, 231, 232, 5, 99, 0, 0, 232, 233, 5, 111,
		0, 0, 233, 234, 5, 110, 0, 0, 234, 235, 5, 116, 0, 0, 235, 236, 5, 105,
		0, 0, 236, 237, 5, 110, 0, 0, 237, 238, 5, 117, 0, 0, 238, 239, 5, 101,
		0, 0, 239, 40, 1, 0, 0, 0, 240, 241, 5, 97, 0, 0, 241, 242, 5, 112, 0,
		0, 242, 243, 5, 112, 0, 0, 243, 244, 5, 101, 0, 0, 244, 245, 5, 110, 0,
		0, 245, 246, 5, 100, 0, 0, 246, 42, 1, 0, 0, 0, 247, 248, 5, 114, 0, 0,
		248, 249, 5, 101, 0, 0, 249, 250, 5, 109, 0, 0, 250, 251, 5, 111, 0, 0,
		251, 252, 5, 118, 0, 0, 252, 253, 5, 101, 0, 0, 253, 254, 5, 76, 0, 0,
		254, 255, 5, 97, 0, 0, 255, 256, 5, 115, 0, 0, 256, 257, 5, 116, 0, 0,
		257, 44, 1, 0, 0, 0, 258, 259, 5, 114, 0, 0, 259, 260, 5, 101, 0, 0, 260,
		261, 5, 109, 0, 0, 261, 262, 5, 111, 0, 0, 262, 263, 5, 118, 0, 0, 263,
		264, 5, 101, 0, 0, 264, 46, 1, 0, 0, 0, 265, 266, 5, 97, 0, 0, 266, 267,
		5, 116, 0, 0, 267, 48, 1, 0, 0, 0, 268, 269, 5, 105, 0, 0, 269, 270, 5,
		115, 0, 0, 270, 271, 5, 69, 0, 0, 271, 272, 5, 109, 0, 0, 272, 273, 5,
		112, 0, 0, 273, 274, 5, 116, 0, 0, 274, 275, 5, 121, 0, 0, 275, 50, 1,
		0, 0, 0, 276, 277, 5, 99, 0, 0, 277, 278, 5, 111, 0, 0, 278, 279, 5, 117,
		0, 0, 279, 280, 5, 110, 0, 0, 280, 281, 5, 116, 0, 0, 281, 52, 1, 0, 0,
		0, 282, 283, 5, 97, 0, 0, 283, 284, 5, 114, 0, 0, 284, 285, 5, 114, 0,
		0, 285, 286, 5, 97, 0, 0, 286, 287, 5, 121, 0, 0, 287, 54, 1, 0, 0, 0,
		288, 289, 5, 114, 0, 0, 289, 290, 5, 101, 0, 0, 290, 291, 5, 116, 0, 0,
		291, 292, 5, 117, 0, 0, 292, 293, 5, 114, 0, 0, 293, 294, 5, 110, 0, 0,
		294, 56, 1, 0, 0, 0, 295, 296, 5, 102, 0, 0, 296, 297, 5, 117, 0, 0, 297,
		298, 5, 110, 0, 0, 298, 299, 5, 99, 0, 0, 299, 58, 1, 0, 0, 0, 300, 301,
		5, 115, 0, 0, 301, 302, 5, 116, 0, 0, 302, 303, 5, 114, 0, 0, 303, 304,
		5, 117, 0, 0, 304, 305, 5, 99, 0, 0, 305, 306, 5, 116, 0, 0, 306, 60, 1,
		0, 0, 0, 307, 308, 5, 103, 0, 0, 308, 309, 5, 117, 0, 0, 309, 310, 5, 97,
		0, 0, 310, 311, 5, 114, 0, 0, 311, 312, 5, 100, 0, 0, 312, 62, 1, 0, 0,
		0, 313, 315, 7, 0, 0, 0, 314, 313, 1, 0, 0, 0, 315, 316, 1, 0, 0, 0, 316,
		314, 1, 0, 0, 0, 316, 317, 1, 0, 0, 0, 317, 324, 1, 0, 0, 0, 318, 320,
		5, 46, 0, 0, 319, 321, 7, 0, 0, 0, 320, 319, 1, 0, 0, 0, 321, 322, 1, 0,
		0, 0, 322, 320, 1, 0, 0, 0, 322, 323, 1, 0, 0, 0, 323, 325, 1, 0, 0, 0,
		324, 318, 1, 0, 0, 0, 324, 325, 1, 0, 0, 0, 325, 64, 1, 0, 0, 0, 326, 330,
		5, 34, 0, 0, 327, 329, 8, 1, 0, 0, 328, 327, 1, 0, 0, 0, 329, 332, 1, 0,
		0, 0, 330, 328, 1, 0, 0, 0, 330, 331, 1, 0, 0, 0, 331, 333, 1, 0, 0, 0,
		332, 330, 1, 0, 0, 0, 333, 334, 5, 34, 0, 0, 334, 66, 1, 0, 0, 0, 335,
		336, 5, 39, 0, 0, 336, 337, 8, 2, 0, 0, 337, 338, 5, 39, 0, 0, 338, 68,
		1, 0, 0, 0, 339, 343, 7, 3, 0, 0, 340, 342, 7, 4, 0, 0, 341, 340, 1, 0,
		0, 0, 342, 345, 1, 0, 0, 0, 343, 341, 1, 0, 0, 0, 343, 344, 1, 0, 0, 0,
		344, 70, 1, 0, 0, 0, 345, 343, 1, 0, 0, 0, 346, 347, 5, 33, 0, 0, 347,
		348, 5, 61, 0, 0, 348, 72, 1, 0, 0, 0, 349, 350, 5, 61, 0, 0, 350, 351,
		5, 61, 0, 0, 351, 74, 1, 0, 0, 0, 352, 353, 5, 33, 0, 0, 353, 76, 1, 0,
		0, 0, 354, 355, 5, 124, 0, 0, 355, 356, 5, 124, 0, 0, 356, 78, 1, 0, 0,
		0, 357, 358, 5, 38, 0, 0, 358, 359, 5, 38, 0, 0, 359, 80, 1, 0, 0, 0, 360,
		361, 5, 61, 0, 0, 361, 82, 1, 0, 0, 0, 362, 363, 5, 62, 0, 0, 363, 364,
		5, 61, 0, 0, 364, 84, 1, 0, 0, 0, 365, 366, 5, 60, 0, 0, 366, 367, 5, 61,
		0, 0, 367, 86, 1, 0, 0, 0, 368, 369, 5, 62, 0, 0, 369, 88, 1, 0, 0, 0,
		370, 371, 5, 60, 0, 0, 371, 90, 1, 0, 0, 0, 372, 373, 5, 42, 0, 0, 373,
		92, 1, 0, 0, 0, 374, 375, 5, 47, 0, 0, 375, 94, 1, 0, 0, 0, 376, 377, 5,
		43, 0, 0, 377, 96, 1, 0, 0, 0, 378, 379, 5, 45, 0, 0, 379, 98, 1, 0, 0,
		0, 380, 381, 5, 37, 0, 0, 381, 100, 1, 0, 0, 0, 382, 383, 5, 40, 0, 0,
		383, 102, 1, 0, 0, 0, 384, 385, 5, 41, 0, 0, 385, 104, 1, 0, 0, 0, 386,
		387, 5, 123, 0, 0, 387, 106, 1, 0, 0, 0, 388, 389, 5, 125, 0, 0, 389, 108,
		1, 0, 0, 0, 390, 391, 5, 58, 0, 0, 391, 110, 1, 0, 0, 0, 392, 393, 5, 91,
		0, 0, 393, 112, 1, 0, 0, 0, 394, 395, 5, 93, 0, 0, 395, 114, 1, 0, 0, 0,
		396, 397, 5, 44, 0, 0, 397, 116, 1, 0, 0, 0, 398, 399, 5, 63, 0, 0, 399,
		118, 1, 0, 0, 0, 400, 401, 5, 59, 0, 0, 401, 120, 1, 0, 0, 0, 402, 403,
		5, 46, 0, 0, 403, 122, 1, 0, 0, 0, 404, 405, 5, 45, 0, 0, 405, 406, 5,
		62, 0, 0, 406, 124, 1, 0, 0, 0, 407, 409, 7, 5, 0, 0, 408, 407, 1, 0, 0,
		0, 409, 410, 1, 0, 0, 0, 410, 408, 1, 0, 0, 0, 410, 411, 1, 0, 0, 0, 411,
		412, 1, 0, 0, 0, 412, 413, 6, 62, 0, 0, 413, 126, 1, 0, 0, 0, 414, 415,
		5, 47, 0, 0, 415, 416, 5, 42, 0, 0, 416, 420, 1, 0, 0, 0, 417, 419, 9,
		0, 0, 0, 418, 417, 1, 0, 0, 0, 419, 422, 1, 0, 0, 0, 420, 421, 1, 0, 0,
		0, 420, 418, 1, 0, 0, 0, 421, 423, 1, 0, 0, 0, 422, 420, 1, 0, 0, 0, 423,
		424, 5, 42, 0, 0, 424, 425, 5, 47, 0, 0, 425, 426, 1, 0, 0, 0, 426, 427,
		6, 63, 0, 0, 427, 128, 1, 0, 0, 0, 428, 429, 5, 47, 0, 0, 429, 430, 5,
		47, 0, 0, 430, 434, 1, 0, 0, 0, 431, 433, 8, 6, 0, 0, 432, 431, 1, 0, 0,
		0, 433, 436, 1, 0, 0, 0, 434, 432, 1, 0, 0, 0, 434, 435, 1, 0, 0, 0, 435,
		437, 1, 0, 0, 0, 436, 434, 1, 0, 0, 0, 437, 438, 6, 64, 0, 0, 438, 130,
		1, 0, 0, 0, 439, 440, 5, 92, 0, 0, 440, 441, 7, 7, 0, 0, 441, 132, 1, 0,
		0, 0, 9, 0, 316, 322, 324, 330, 343, 410, 420, 434, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SwiftLexerInit initializes any static state used to implement SwiftLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSwiftLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SwiftLexerInit() {
	staticData := &SwiftLexerLexerStaticData
	staticData.once.Do(swiftlexerLexerInit)
}

// NewSwiftLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSwiftLexer(input antlr.CharStream) *SwiftLexer {
	SwiftLexerInit()
	l := new(SwiftLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &SwiftLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "SwiftLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SwiftLexer tokens.
const (
	SwiftLexerINT            = 1
	SwiftLexerFLOAT          = 2
	SwiftLexerBOOL           = 3
	SwiftLexerSTR            = 4
	SwiftLexerTRU            = 5
	SwiftLexerFAL            = 6
	SwiftLexerPRINT          = 7
	SwiftLexerIF             = 8
	SwiftLexerELSE           = 9
	SwiftLexerWHILE          = 10
	SwiftLexerFOR            = 11
	SwiftLexerIN             = 12
	SwiftLexerSWITCH         = 13
	SwiftLexerCASE           = 14
	SwiftLexerDEFAULT        = 15
	SwiftLexerVAR            = 16
	SwiftLexerLET            = 17
	SwiftLexerNIL            = 18
	SwiftLexerBREAK          = 19
	SwiftLexerCONTINUE       = 20
	SwiftLexerAPPEND         = 21
	SwiftLexerREMOVELAST     = 22
	SwiftLexerREMOVE         = 23
	SwiftLexerAT             = 24
	SwiftLexerISEMPTY        = 25
	SwiftLexerCOUNT          = 26
	SwiftLexerARRAY          = 27
	SwiftLexerRETURN         = 28
	SwiftLexerFUNC           = 29
	SwiftLexerSTRUCT         = 30
	SwiftLexerGUARD          = 31
	SwiftLexerNUMBER         = 32
	SwiftLexerSTRING         = 33
	SwiftLexerCHAR           = 34
	SwiftLexerID             = 35
	SwiftLexerDIFE           = 36
	SwiftLexerIG_IG          = 37
	SwiftLexerNOT            = 38
	SwiftLexerOR             = 39
	SwiftLexerAND            = 40
	SwiftLexerIGUAL          = 41
	SwiftLexerMAYIG          = 42
	SwiftLexerMENIG          = 43
	SwiftLexerMAYOR          = 44
	SwiftLexerMENOR          = 45
	SwiftLexerMULT           = 46
	SwiftLexerDIV            = 47
	SwiftLexerSUM            = 48
	SwiftLexerRES            = 49
	SwiftLexerMOD            = 50
	SwiftLexerPAR_IZQ        = 51
	SwiftLexerPAR_DER        = 52
	SwiftLexerLLAVE_IZQ      = 53
	SwiftLexerLLAVE_DER      = 54
	SwiftLexerDOSPUNTOS      = 55
	SwiftLexerCOR_IZQ        = 56
	SwiftLexerCOR_DER        = 57
	SwiftLexerCOMA           = 58
	SwiftLexerCIERRAPREGUNTA = 59
	SwiftLexerPUNTOCOMA      = 60
	SwiftLexerPUNTO          = 61
	SwiftLexerFLECHA         = 62
	SwiftLexerWHITESPACE     = 63
	SwiftLexerCOMMENT        = 64
	SwiftLexerLINE_COMMENT   = 65
)
