// Code generated from SwiftLexer.g4 by ANTLR 4.13.0. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SwiftLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var SwiftLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func swiftlexerLexerInit() {
	staticData := &SwiftLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'Int'", "'Float'", "'Bool'", "'String'", "'true'", "'false'", "'print'",
		"'if'", "'else'", "'while'", "'for'", "'in'", "'var'", "'let'", "'nil'",
		"'break'", "'continue'", "'append'", "'removeLast'", "'remove'", "'at'",
		"'isEmpty'", "'count'", "'array'", "'return'", "'func'", "'struct'",
		"'guard'", "", "", "", "", "'!='", "'=='", "'!'", "'||'", "'&&'", "'='",
		"'>='", "'<='", "'>'", "'<'", "'*'", "'/'", "'+'", "'-'", "'%'", "'('",
		"')'", "'{'", "'}'", "':'", "'['", "']'", "','", "'?'", "';'", "'.'",
		"'->'",
	}
	staticData.SymbolicNames = []string{
		"", "INT", "FLOAT", "BOOL", "STR", "TRU", "FAL", "PRINT", "IF", "ELSE",
		"WHILE", "FOR", "IN", "VAR", "LET", "NIL", "BREAK", "CONTINUE", "APPEND",
		"REMOVELAST", "REMOVE", "AT", "ISEMPTY", "COUNT", "ARRAY", "RETURN",
		"FUNC", "STRUCT", "GUARD", "NUMBER", "STRING", "CHAR", "ID", "DIFE",
		"IG_IG", "NOT", "OR", "AND", "IGUAL", "MAYIG", "MENIG", "MAYOR", "MENOR",
		"MULT", "DIV", "SUM", "RES", "MOD", "PAR_IZQ", "PAR_DER", "LLAVE_IZQ",
		"LLAVE_DER", "DOSPUNTOS", "COR_IZQ", "COR_DER", "COMA", "CIERRAPREGUNTA",
		"PUNTOCOMA", "PUNTO", "FLECHA", "WHITESPACE", "COMMENT", "LINE_COMMENT",
	}
	staticData.RuleNames = []string{
		"INT", "FLOAT", "BOOL", "STR", "TRU", "FAL", "PRINT", "IF", "ELSE",
		"WHILE", "FOR", "IN", "VAR", "LET", "NIL", "BREAK", "CONTINUE", "APPEND",
		"REMOVELAST", "REMOVE", "AT", "ISEMPTY", "COUNT", "ARRAY", "RETURN",
		"FUNC", "STRUCT", "GUARD", "NUMBER", "STRING", "CHAR", "ID", "DIFE",
		"IG_IG", "NOT", "OR", "AND", "IGUAL", "MAYIG", "MENIG", "MAYOR", "MENOR",
		"MULT", "DIV", "SUM", "RES", "MOD", "PAR_IZQ", "PAR_DER", "LLAVE_IZQ",
		"LLAVE_DER", "DOSPUNTOS", "COR_IZQ", "COR_DER", "COMA", "CIERRAPREGUNTA",
		"PUNTOCOMA", "PUNTO", "FLECHA", "WHITESPACE", "COMMENT", "LINE_COMMENT",
		"ESC_SEQ",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 62, 416, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
		2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1,
		4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1,
		6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1,
		9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1,
		11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14,
		1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1,
		16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17,
		1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1,
		18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19,
		1, 19, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1,
		21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23,
		1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1,
		25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26,
		1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 4, 28, 289, 8,
		28, 11, 28, 12, 28, 290, 1, 28, 1, 28, 4, 28, 295, 8, 28, 11, 28, 12, 28,
		296, 3, 28, 299, 8, 28, 1, 29, 1, 29, 5, 29, 303, 8, 29, 10, 29, 12, 29,
		306, 9, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 5,
		31, 316, 8, 31, 10, 31, 12, 31, 319, 9, 31, 1, 32, 1, 32, 1, 32, 1, 33,
		1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1,
		37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 41,
		1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1,
		46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51,
		1, 52, 1, 52, 1, 53, 1, 53, 1, 54, 1, 54, 1, 55, 1, 55, 1, 56, 1, 56, 1,
		57, 1, 57, 1, 58, 1, 58, 1, 58, 1, 59, 4, 59, 383, 8, 59, 11, 59, 12, 59,
		384, 1, 59, 1, 59, 1, 60, 1, 60, 1, 60, 1, 60, 5, 60, 393, 8, 60, 10, 60,
		12, 60, 396, 9, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 61, 1, 61, 1,
		61, 1, 61, 5, 61, 407, 8, 61, 10, 61, 12, 61, 410, 9, 61, 1, 61, 1, 61,
		1, 62, 1, 62, 1, 62, 1, 394, 0, 63, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6,
		13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31,
		16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49,
		25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67,
		34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85,
		43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101, 51, 103,
		52, 105, 53, 107, 54, 109, 55, 111, 56, 113, 57, 115, 58, 117, 59, 119,
		60, 121, 61, 123, 62, 125, 0, 1, 0, 8, 1, 0, 48, 57, 1, 0, 34, 34, 1, 0,
		39, 39, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97,
		122, 4, 0, 9, 10, 13, 13, 32, 32, 92, 92, 2, 0, 10, 10, 13, 13, 7, 0, 32,
		33, 35, 35, 43, 43, 45, 46, 58, 58, 64, 64, 91, 93, 422, 0, 1, 1, 0, 0,
		0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0,
		0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0,
		0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1,
		0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33,
		1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0,
		41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0,
		0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0,
		0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0,
		0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1,
		0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79,
		1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0,
		87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0,
		0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0,
		0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109,
		1, 0, 0, 0, 0, 111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0,
		0, 117, 1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1,
		0, 0, 0, 1, 127, 1, 0, 0, 0, 3, 131, 1, 0, 0, 0, 5, 137, 1, 0, 0, 0, 7,
		142, 1, 0, 0, 0, 9, 149, 1, 0, 0, 0, 11, 154, 1, 0, 0, 0, 13, 160, 1, 0,
		0, 0, 15, 166, 1, 0, 0, 0, 17, 169, 1, 0, 0, 0, 19, 174, 1, 0, 0, 0, 21,
		180, 1, 0, 0, 0, 23, 184, 1, 0, 0, 0, 25, 187, 1, 0, 0, 0, 27, 191, 1,
		0, 0, 0, 29, 195, 1, 0, 0, 0, 31, 199, 1, 0, 0, 0, 33, 205, 1, 0, 0, 0,
		35, 214, 1, 0, 0, 0, 37, 221, 1, 0, 0, 0, 39, 232, 1, 0, 0, 0, 41, 239,
		1, 0, 0, 0, 43, 242, 1, 0, 0, 0, 45, 250, 1, 0, 0, 0, 47, 256, 1, 0, 0,
		0, 49, 262, 1, 0, 0, 0, 51, 269, 1, 0, 0, 0, 53, 274, 1, 0, 0, 0, 55, 281,
		1, 0, 0, 0, 57, 288, 1, 0, 0, 0, 59, 300, 1, 0, 0, 0, 61, 309, 1, 0, 0,
		0, 63, 313, 1, 0, 0, 0, 65, 320, 1, 0, 0, 0, 67, 323, 1, 0, 0, 0, 69, 326,
		1, 0, 0, 0, 71, 328, 1, 0, 0, 0, 73, 331, 1, 0, 0, 0, 75, 334, 1, 0, 0,
		0, 77, 336, 1, 0, 0, 0, 79, 339, 1, 0, 0, 0, 81, 342, 1, 0, 0, 0, 83, 344,
		1, 0, 0, 0, 85, 346, 1, 0, 0, 0, 87, 348, 1, 0, 0, 0, 89, 350, 1, 0, 0,
		0, 91, 352, 1, 0, 0, 0, 93, 354, 1, 0, 0, 0, 95, 356, 1, 0, 0, 0, 97, 358,
		1, 0, 0, 0, 99, 360, 1, 0, 0, 0, 101, 362, 1, 0, 0, 0, 103, 364, 1, 0,
		0, 0, 105, 366, 1, 0, 0, 0, 107, 368, 1, 0, 0, 0, 109, 370, 1, 0, 0, 0,
		111, 372, 1, 0, 0, 0, 113, 374, 1, 0, 0, 0, 115, 376, 1, 0, 0, 0, 117,
		378, 1, 0, 0, 0, 119, 382, 1, 0, 0, 0, 121, 388, 1, 0, 0, 0, 123, 402,
		1, 0, 0, 0, 125, 413, 1, 0, 0, 0, 127, 128, 5, 73, 0, 0, 128, 129, 5, 110,
		0, 0, 129, 130, 5, 116, 0, 0, 130, 2, 1, 0, 0, 0, 131, 132, 5, 70, 0, 0,
		132, 133, 5, 108, 0, 0, 133, 134, 5, 111, 0, 0, 134, 135, 5, 97, 0, 0,
		135, 136, 5, 116, 0, 0, 136, 4, 1, 0, 0, 0, 137, 138, 5, 66, 0, 0, 138,
		139, 5, 111, 0, 0, 139, 140, 5, 111, 0, 0, 140, 141, 5, 108, 0, 0, 141,
		6, 1, 0, 0, 0, 142, 143, 5, 83, 0, 0, 143, 144, 5, 116, 0, 0, 144, 145,
		5, 114, 0, 0, 145, 146, 5, 105, 0, 0, 146, 147, 5, 110, 0, 0, 147, 148,
		5, 103, 0, 0, 148, 8, 1, 0, 0, 0, 149, 150, 5, 116, 0, 0, 150, 151, 5,
		114, 0, 0, 151, 152, 5, 117, 0, 0, 152, 153, 5, 101, 0, 0, 153, 10, 1,
		0, 0, 0, 154, 155, 5, 102, 0, 0, 155, 156, 5, 97, 0, 0, 156, 157, 5, 108,
		0, 0, 157, 158, 5, 115, 0, 0, 158, 159, 5, 101, 0, 0, 159, 12, 1, 0, 0,
		0, 160, 161, 5, 112, 0, 0, 161, 162, 5, 114, 0, 0, 162, 163, 5, 105, 0,
		0, 163, 164, 5, 110, 0, 0, 164, 165, 5, 116, 0, 0, 165, 14, 1, 0, 0, 0,
		166, 167, 5, 105, 0, 0, 167, 168, 5, 102, 0, 0, 168, 16, 1, 0, 0, 0, 169,
		170, 5, 101, 0, 0, 170, 171, 5, 108, 0, 0, 171, 172, 5, 115, 0, 0, 172,
		173, 5, 101, 0, 0, 173, 18, 1, 0, 0, 0, 174, 175, 5, 119, 0, 0, 175, 176,
		5, 104, 0, 0, 176, 177, 5, 105, 0, 0, 177, 178, 5, 108, 0, 0, 178, 179,
		5, 101, 0, 0, 179, 20, 1, 0, 0, 0, 180, 181, 5, 102, 0, 0, 181, 182, 5,
		111, 0, 0, 182, 183, 5, 114, 0, 0, 183, 22, 1, 0, 0, 0, 184, 185, 5, 105,
		0, 0, 185, 186, 5, 110, 0, 0, 186, 24, 1, 0, 0, 0, 187, 188, 5, 118, 0,
		0, 188, 189, 5, 97, 0, 0, 189, 190, 5, 114, 0, 0, 190, 26, 1, 0, 0, 0,
		191, 192, 5, 108, 0, 0, 192, 193, 5, 101, 0, 0, 193, 194, 5, 116, 0, 0,
		194, 28, 1, 0, 0, 0, 195, 196, 5, 110, 0, 0, 196, 197, 5, 105, 0, 0, 197,
		198, 5, 108, 0, 0, 198, 30, 1, 0, 0, 0, 199, 200, 5, 98, 0, 0, 200, 201,
		5, 114, 0, 0, 201, 202, 5, 101, 0, 0, 202, 203, 5, 97, 0, 0, 203, 204,
		5, 107, 0, 0, 204, 32, 1, 0, 0, 0, 205, 206, 5, 99, 0, 0, 206, 207, 5,
		111, 0, 0, 207, 208, 5, 110, 0, 0, 208, 209, 5, 116, 0, 0, 209, 210, 5,
		105, 0, 0, 210, 211, 5, 110, 0, 0, 211, 212, 5, 117, 0, 0, 212, 213, 5,
		101, 0, 0, 213, 34, 1, 0, 0, 0, 214, 215, 5, 97, 0, 0, 215, 216, 5, 112,
		0, 0, 216, 217, 5, 112, 0, 0, 217, 218, 5, 101, 0, 0, 218, 219, 5, 110,
		0, 0, 219, 220, 5, 100, 0, 0, 220, 36, 1, 0, 0, 0, 221, 222, 5, 114, 0,
		0, 222, 223, 5, 101, 0, 0, 223, 224, 5, 109, 0, 0, 224, 225, 5, 111, 0,
		0, 225, 226, 5, 118, 0, 0, 226, 227, 5, 101, 0, 0, 227, 228, 5, 76, 0,
		0, 228, 229, 5, 97, 0, 0, 229, 230, 5, 115, 0, 0, 230, 231, 5, 116, 0,
		0, 231, 38, 1, 0, 0, 0, 232, 233, 5, 114, 0, 0, 233, 234, 5, 101, 0, 0,
		234, 235, 5, 109, 0, 0, 235, 236, 5, 111, 0, 0, 236, 237, 5, 118, 0, 0,
		237, 238, 5, 101, 0, 0, 238, 40, 1, 0, 0, 0, 239, 240, 5, 97, 0, 0, 240,
		241, 5, 116, 0, 0, 241, 42, 1, 0, 0, 0, 242, 243, 5, 105, 0, 0, 243, 244,
		5, 115, 0, 0, 244, 245, 5, 69, 0, 0, 245, 246, 5, 109, 0, 0, 246, 247,
		5, 112, 0, 0, 247, 248, 5, 116, 0, 0, 248, 249, 5, 121, 0, 0, 249, 44,
		1, 0, 0, 0, 250, 251, 5, 99, 0, 0, 251, 252, 5, 111, 0, 0, 252, 253, 5,
		117, 0, 0, 253, 254, 5, 110, 0, 0, 254, 255, 5, 116, 0, 0, 255, 46, 1,
		0, 0, 0, 256, 257, 5, 97, 0, 0, 257, 258, 5, 114, 0, 0, 258, 259, 5, 114,
		0, 0, 259, 260, 5, 97, 0, 0, 260, 261, 5, 121, 0, 0, 261, 48, 1, 0, 0,
		0, 262, 263, 5, 114, 0, 0, 263, 264, 5, 101, 0, 0, 264, 265, 5, 116, 0,
		0, 265, 266, 5, 117, 0, 0, 266, 267, 5, 114, 0, 0, 267, 268, 5, 110, 0,
		0, 268, 50, 1, 0, 0, 0, 269, 270, 5, 102, 0, 0, 270, 271, 5, 117, 0, 0,
		271, 272, 5, 110, 0, 0, 272, 273, 5, 99, 0, 0, 273, 52, 1, 0, 0, 0, 274,
		275, 5, 115, 0, 0, 275, 276, 5, 116, 0, 0, 276, 277, 5, 114, 0, 0, 277,
		278, 5, 117, 0, 0, 278, 279, 5, 99, 0, 0, 279, 280, 5, 116, 0, 0, 280,
		54, 1, 0, 0, 0, 281, 282, 5, 103, 0, 0, 282, 283, 5, 117, 0, 0, 283, 284,
		5, 97, 0, 0, 284, 285, 5, 114, 0, 0, 285, 286, 5, 100, 0, 0, 286, 56, 1,
		0, 0, 0, 287, 289, 7, 0, 0, 0, 288, 287, 1, 0, 0, 0, 289, 290, 1, 0, 0,
		0, 290, 288, 1, 0, 0, 0, 290, 291, 1, 0, 0, 0, 291, 298, 1, 0, 0, 0, 292,
		294, 5, 46, 0, 0, 293, 295, 7, 0, 0, 0, 294, 293, 1, 0, 0, 0, 295, 296,
		1, 0, 0, 0, 296, 294, 1, 0, 0, 0, 296, 297, 1, 0, 0, 0, 297, 299, 1, 0,
		0, 0, 298, 292, 1, 0, 0, 0, 298, 299, 1, 0, 0, 0, 299, 58, 1, 0, 0, 0,
		300, 304, 5, 34, 0, 0, 301, 303, 8, 1, 0, 0, 302, 301, 1, 0, 0, 0, 303,
		306, 1, 0, 0, 0, 304, 302, 1, 0, 0, 0, 304, 305, 1, 0, 0, 0, 305, 307,
		1, 0, 0, 0, 306, 304, 1, 0, 0, 0, 307, 308, 5, 34, 0, 0, 308, 60, 1, 0,
		0, 0, 309, 310, 5, 39, 0, 0, 310, 311, 8, 2, 0, 0, 311, 312, 5, 39, 0,
		0, 312, 62, 1, 0, 0, 0, 313, 317, 7, 3, 0, 0, 314, 316, 7, 4, 0, 0, 315,
		314, 1, 0, 0, 0, 316, 319, 1, 0, 0, 0, 317, 315, 1, 0, 0, 0, 317, 318,
		1, 0, 0, 0, 318, 64, 1, 0, 0, 0, 319, 317, 1, 0, 0, 0, 320, 321, 5, 33,
		0, 0, 321, 322, 5, 61, 0, 0, 322, 66, 1, 0, 0, 0, 323, 324, 5, 61, 0, 0,
		324, 325, 5, 61, 0, 0, 325, 68, 1, 0, 0, 0, 326, 327, 5, 33, 0, 0, 327,
		70, 1, 0, 0, 0, 328, 329, 5, 124, 0, 0, 329, 330, 5, 124, 0, 0, 330, 72,
		1, 0, 0, 0, 331, 332, 5, 38, 0, 0, 332, 333, 5, 38, 0, 0, 333, 74, 1, 0,
		0, 0, 334, 335, 5, 61, 0, 0, 335, 76, 1, 0, 0, 0, 336, 337, 5, 62, 0, 0,
		337, 338, 5, 61, 0, 0, 338, 78, 1, 0, 0, 0, 339, 340, 5, 60, 0, 0, 340,
		341, 5, 61, 0, 0, 341, 80, 1, 0, 0, 0, 342, 343, 5, 62, 0, 0, 343, 82,
		1, 0, 0, 0, 344, 345, 5, 60, 0, 0, 345, 84, 1, 0, 0, 0, 346, 347, 5, 42,
		0, 0, 347, 86, 1, 0, 0, 0, 348, 349, 5, 47, 0, 0, 349, 88, 1, 0, 0, 0,
		350, 351, 5, 43, 0, 0, 351, 90, 1, 0, 0, 0, 352, 353, 5, 45, 0, 0, 353,
		92, 1, 0, 0, 0, 354, 355, 5, 37, 0, 0, 355, 94, 1, 0, 0, 0, 356, 357, 5,
		40, 0, 0, 357, 96, 1, 0, 0, 0, 358, 359, 5, 41, 0, 0, 359, 98, 1, 0, 0,
		0, 360, 361, 5, 123, 0, 0, 361, 100, 1, 0, 0, 0, 362, 363, 5, 125, 0, 0,
		363, 102, 1, 0, 0, 0, 364, 365, 5, 58, 0, 0, 365, 104, 1, 0, 0, 0, 366,
		367, 5, 91, 0, 0, 367, 106, 1, 0, 0, 0, 368, 369, 5, 93, 0, 0, 369, 108,
		1, 0, 0, 0, 370, 371, 5, 44, 0, 0, 371, 110, 1, 0, 0, 0, 372, 373, 5, 63,
		0, 0, 373, 112, 1, 0, 0, 0, 374, 375, 5, 59, 0, 0, 375, 114, 1, 0, 0, 0,
		376, 377, 5, 46, 0, 0, 377, 116, 1, 0, 0, 0, 378, 379, 5, 45, 0, 0, 379,
		380, 5, 62, 0, 0, 380, 118, 1, 0, 0, 0, 381, 383, 7, 5, 0, 0, 382, 381,
		1, 0, 0, 0, 383, 384, 1, 0, 0, 0, 384, 382, 1, 0, 0, 0, 384, 385, 1, 0,
		0, 0, 385, 386, 1, 0, 0, 0, 386, 387, 6, 59, 0, 0, 387, 120, 1, 0, 0, 0,
		388, 389, 5, 47, 0, 0, 389, 390, 5, 42, 0, 0, 390, 394, 1, 0, 0, 0, 391,
		393, 9, 0, 0, 0, 392, 391, 1, 0, 0, 0, 393, 396, 1, 0, 0, 0, 394, 395,
		1, 0, 0, 0, 394, 392, 1, 0, 0, 0, 395, 397, 1, 0, 0, 0, 396, 394, 1, 0,
		0, 0, 397, 398, 5, 42, 0, 0, 398, 399, 5, 47, 0, 0, 399, 400, 1, 0, 0,
		0, 400, 401, 6, 60, 0, 0, 401, 122, 1, 0, 0, 0, 402, 403, 5, 47, 0, 0,
		403, 404, 5, 47, 0, 0, 404, 408, 1, 0, 0, 0, 405, 407, 8, 6, 0, 0, 406,
		405, 1, 0, 0, 0, 407, 410, 1, 0, 0, 0, 408, 406, 1, 0, 0, 0, 408, 409,
		1, 0, 0, 0, 409, 411, 1, 0, 0, 0, 410, 408, 1, 0, 0, 0, 411, 412, 6, 61,
		0, 0, 412, 124, 1, 0, 0, 0, 413, 414, 5, 92, 0, 0, 414, 415, 7, 7, 0, 0,
		415, 126, 1, 0, 0, 0, 9, 0, 290, 296, 298, 304, 317, 384, 394, 408, 1,
		6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SwiftLexerInit initializes any static state used to implement SwiftLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSwiftLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SwiftLexerInit() {
	staticData := &SwiftLexerLexerStaticData
	staticData.once.Do(swiftlexerLexerInit)
}

// NewSwiftLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSwiftLexer(input antlr.CharStream) *SwiftLexer {
	SwiftLexerInit()
	l := new(SwiftLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &SwiftLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "SwiftLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SwiftLexer tokens.
const (
	SwiftLexerINT            = 1
	SwiftLexerFLOAT          = 2
	SwiftLexerBOOL           = 3
	SwiftLexerSTR            = 4
	SwiftLexerTRU            = 5
	SwiftLexerFAL            = 6
	SwiftLexerPRINT          = 7
	SwiftLexerIF             = 8
	SwiftLexerELSE           = 9
	SwiftLexerWHILE          = 10
	SwiftLexerFOR            = 11
	SwiftLexerIN             = 12
	SwiftLexerVAR            = 13
	SwiftLexerLET            = 14
	SwiftLexerNIL            = 15
	SwiftLexerBREAK          = 16
	SwiftLexerCONTINUE       = 17
	SwiftLexerAPPEND         = 18
	SwiftLexerREMOVELAST     = 19
	SwiftLexerREMOVE         = 20
	SwiftLexerAT             = 21
	SwiftLexerISEMPTY        = 22
	SwiftLexerCOUNT          = 23
	SwiftLexerARRAY          = 24
	SwiftLexerRETURN         = 25
	SwiftLexerFUNC           = 26
	SwiftLexerSTRUCT         = 27
	SwiftLexerGUARD          = 28
	SwiftLexerNUMBER         = 29
	SwiftLexerSTRING         = 30
	SwiftLexerCHAR           = 31
	SwiftLexerID             = 32
	SwiftLexerDIFE           = 33
	SwiftLexerIG_IG          = 34
	SwiftLexerNOT            = 35
	SwiftLexerOR             = 36
	SwiftLexerAND            = 37
	SwiftLexerIGUAL          = 38
	SwiftLexerMAYIG          = 39
	SwiftLexerMENIG          = 40
	SwiftLexerMAYOR          = 41
	SwiftLexerMENOR          = 42
	SwiftLexerMULT           = 43
	SwiftLexerDIV            = 44
	SwiftLexerSUM            = 45
	SwiftLexerRES            = 46
	SwiftLexerMOD            = 47
	SwiftLexerPAR_IZQ        = 48
	SwiftLexerPAR_DER        = 49
	SwiftLexerLLAVE_IZQ      = 50
	SwiftLexerLLAVE_DER      = 51
	SwiftLexerDOSPUNTOS      = 52
	SwiftLexerCOR_IZQ        = 53
	SwiftLexerCOR_DER        = 54
	SwiftLexerCOMA           = 55
	SwiftLexerCIERRAPREGUNTA = 56
	SwiftLexerPUNTOCOMA      = 57
	SwiftLexerPUNTO          = 58
	SwiftLexerFLECHA         = 59
	SwiftLexerWHITESPACE     = 60
	SwiftLexerCOMMENT        = 61
	SwiftLexerLINE_COMMENT   = 62
)
